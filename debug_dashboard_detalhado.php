<?php
/**
 * Debug detalhado do Dashboard do Parceiro
 * Identifica exatamente onde est√° o problema
 */

// Iniciar sess√£o
session_start();

// Simular usu√°rio logado como parceiro
$_SESSION['usuario_id'] = 1;
$_SESSION['tipo_usuario'] = 'parceiro';
$_SESSION['usuario_nome'] = 'Teste Parceiro';
$_SESSION['usuario_email'] = 'parceiro@teste.com';
$_SESSION['usuario_telefone'] = '11999999999';

echo "<h2>üîç Debug Detalhado do Dashboard</h2>";

// 1. Testar Health Check
echo "<h3>1. Testando Health Check</h3>";
try {
    if (file_exists('includes/health_check.php')) {
        echo "‚úÖ Arquivo health_check.php existe<br>";
        
        // Desabilitar redirecionamento autom√°tico
        define('HEALTH_CHECK_DISABLED', true);
        
        require_once 'includes/health_check.php';
        
        $health = getSystemHealthStatus();
        
        if ($health['healthy']) {
            echo "‚úÖ Sistema saud√°vel segundo health check<br>";
        } else {
            echo "‚ùå Sistema n√£o saud√°vel: " . $health['message'] . "<br>";
        }
        
        // Testar fun√ß√£o de redirecionamento
        echo "<strong>Testando isSystemHealthy():</strong><br>";
        if (isSystemHealthy()) {
            echo "‚úÖ isSystemHealthy() retorna true<br>";
        } else {
            echo "‚ùå isSystemHealthy() retorna false<br>";
        }
        
    } else {
        echo "‚ùå Arquivo health_check.php n√£o encontrado<br>";
    }
} catch (Exception $e) {
    echo "‚ùå Erro no health check: " . $e->getMessage() . "<br>";
}

// 2. Testar arquivos de autentica√ß√£o
echo "<h3>2. Testando Arquivos de Autentica√ß√£o</h3>";
$arquivos_auth = [
    'includes/auth.php',
    'includes/functions.php',
    'models/salao.php',
    'models/profissional.php',
    'models/agendamento.php'
];

foreach ($arquivos_auth as $arquivo) {
    if (file_exists($arquivo)) {
        echo "‚úÖ $arquivo existe<br>";
    } else {
        echo "‚ùå $arquivo N√ÉO existe<br>";
    }
}

// 3. Testar fun√ß√µes de autentica√ß√£o
echo "<h3>3. Testando Fun√ß√µes de Autentica√ß√£o</h3>";
try {
    require_once 'includes/auth.php';
    
    echo "<strong>isLoggedIn():</strong> " . (isLoggedIn() ? "‚úÖ true" : "‚ùå false") . "<br>";
    echo "<strong>isParceiro():</strong> " . (isParceiro() ? "‚úÖ true" : "‚ùå false") . "<br>";
    echo "<strong>hasUserType('parceiro'):</strong> " . (hasUserType('parceiro') ? "‚úÖ true" : "‚ùå false") . "<br>";
    
    $user = getLoggedUser();
    if ($user) {
        echo "<strong>getLoggedUser():</strong> ‚úÖ Dados obtidos<br>";
        echo "&nbsp;&nbsp;‚Ä¢ ID: " . $user['id'] . "<br>";
        echo "&nbsp;&nbsp;‚Ä¢ Tipo: " . $user['tipo_usuario'] . "<br>";
    } else {
        echo "<strong>getLoggedUser():</strong> ‚ùå Nenhum dado<br>";
    }
    
} catch (Exception $e) {
    echo "‚ùå Erro na autentica√ß√£o: " . $e->getMessage() . "<br>";
}

// 4. Testar conex√£o com banco
echo "<h3>4. Testando Conex√£o com Banco</h3>";
try {
    require_once 'config/database.php';
    
    $db = Database::getInstance();
    $conn = $db->connect();
    
    if ($conn) {
        echo "‚úÖ Conex√£o com banco estabelecida<br>";
        
        // Testar query simples
        $stmt = $conn->query("SELECT 1 as test");
        $result = $stmt->fetch();
        
        if ($result && $result['test'] == 1) {
            echo "‚úÖ Query de teste executada com sucesso<br>";
        } else {
            echo "‚ùå Falha na query de teste<br>";
        }
        
    } else {
        echo "‚ùå Falha na conex√£o com banco<br>";
    }
    
} catch (Exception $e) {
    echo "‚ùå Erro na conex√£o: " . $e->getMessage() . "<br>";
}

// 5. Testar modelos
echo "<h3>5. Testando Modelos</h3>";
try {
    require_once 'models/salao.php';
    require_once 'models/profissional.php';
    require_once 'models/agendamento.php';
    
    $salao = new Salao();
    $profissional = new Profissional();
    $agendamento = new Agendamento();
    
    echo "‚úÖ Modelos instanciados com sucesso<br>";
    
    // Testar busca de sal√£o
    $meu_salao = $salao->buscarPorDono(1);
    
    if ($meu_salao) {
        echo "‚úÖ Sal√£o encontrado para o usu√°rio<br>";
        echo "&nbsp;&nbsp;‚Ä¢ Nome: " . $meu_salao['nome'] . "<br>";
        echo "&nbsp;&nbsp;‚Ä¢ ID: " . $meu_salao['id'] . "<br>";
    } else {
        echo "‚ö†Ô∏è Nenhum sal√£o encontrado para o usu√°rio (pode ser normal)<br>";
    }
    
} catch (Exception $e) {
    echo "‚ùå Erro nos modelos: " . $e->getMessage() . "<br>";
}

// 6. Simular execu√ß√£o do dashboard passo a passo
echo "<h3>6. Simulando Dashboard Passo a Passo</h3>";

echo "<strong>Passo 1:</strong> Verifica√ß√£o de sa√∫de...<br>";
if (defined('HEALTH_CHECK_DISABLED')) {
    echo "‚úÖ Health check desabilitado para teste<br>";
} else {
    echo "‚ö†Ô∏è Health check ativo - pode redirecionar<br>";
}

echo "<strong>Passo 2:</strong> Verifica√ß√£o de arquivos cr√≠ticos...<br>";
$arquivos_criticos = [
    'includes/auth.php',
    'includes/functions.php',
    'models/salao.php',
    'models/profissional.php',
    'models/agendamento.php'
];

$arquivos_ok = true;
foreach ($arquivos_criticos as $arquivo) {
    if (!file_exists($arquivo)) {
        echo "‚ùå Arquivo cr√≠tico n√£o encontrado: $arquivo<br>";
        $arquivos_ok = false;
    }
}

if ($arquivos_ok) {
    echo "‚úÖ Todos os arquivos cr√≠ticos encontrados<br>";
}

echo "<strong>Passo 3:</strong> Verifica√ß√£o de fun√ß√µes...<br>";
if (function_exists('requireParceiro')) {
    echo "‚úÖ Fun√ß√£o requireParceiro existe<br>";
} else {
    echo "‚ùå Fun√ß√£o requireParceiro n√£o encontrada<br>";
}

if (function_exists('getLoggedUser')) {
    echo "‚úÖ Fun√ß√£o getLoggedUser existe<br>";
} else {
    echo "‚ùå Fun√ß√£o getLoggedUser n√£o encontrada<br>";
}

echo "<hr>";
echo "<p><strong>Conclus√£o:</strong> Se todos os itens acima est√£o ‚úÖ, o problema pode estar na l√≥gica espec√≠fica do dashboard.</p>";
echo "<p><strong>Data/Hora:</strong> " . date('d/m/Y H:i:s') . "</p>";
?>