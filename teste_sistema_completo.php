<?php
require_once 'config/database.php';
require_once 'models/agendamento.php';
require_once 'models/profissional.php';
require_once 'models/salao.php';

echo "<h2>Teste do Sistema de Agendamento Completo</h2>";

try {
    // Conectar ao banco
    $db = Database::getInstance();
    $conn = $db->connect();
    
    echo "<h3>1. Verifica√ß√£o da Conex√£o</h3>";
    echo "<p class='success'>‚úÖ Conectado ao banco: " . $conn->query("SELECT DATABASE()")->fetchColumn() . "</p>";
    
    // Instanciar classes
    $agendamento = new Agendamento();
    $profissional = new Profissional();
    $salao = new Salao();
    
    echo "<h3>2. Verifica√ß√£o de Dados B√°sicos</h3>";
    
    // Verificar se existem sal√µes
    try {
        $saloes = $salao->listarTodos();
        echo "<p class='success'>‚úÖ Sal√µes encontrados: " . count($saloes) . "</p>";
        if (count($saloes) > 0) {
            $primeiro_salao = $saloes[0];
            echo "<p class='info'>üìç Primeiro sal√£o: {$primeiro_salao['nome']} (ID: {$primeiro_salao['id']})</p>";
        }
    } catch (Exception $e) {
        echo "<p class='error'>‚ùå Erro ao listar sal√µes: " . $e->getMessage() . "</p>";
    }
    
    // Verificar se existem profissionais
    try {
        $profissionais = $profissional->listarTodos();
        echo "<p class='success'>‚úÖ Profissionais encontrados: " . count($profissionais) . "</p>";
        if (count($profissionais) > 0) {
            $primeiro_prof = $profissionais[0];
            echo "<p class='info'>üë®‚Äçüíº Primeiro profissional: {$primeiro_prof['nome']} (ID: {$primeiro_prof['id']})</p>";
        }
    } catch (Exception $e) {
        echo "<p class='error'>‚ùå Erro ao listar profissionais: " . $e->getMessage() . "</p>";
    }
    
    echo "<h3>3. Teste de Gera√ß√£o de Hor√°rios (Intervalos de 30min)</h3>";
    
    // Testar com dados reais se existirem, sen√£o usar IDs fict√≠cios
    $id_profissional = isset($primeiro_prof) ? $primeiro_prof['id'] : 1;
    $data_teste = date('Y-m-d', strtotime('+1 day')); // Amanh√£
    
    echo "<p class='info'>üîç Testando para profissional ID: $id_profissional, data: $data_teste</p>";
    
    // Teste 1: Hor√°rios ocupados
    try {
        $ocupados = $agendamento->listarHorariosOcupados($id_profissional, $data_teste);
        echo "<p class='success'>‚úÖ Hor√°rios ocupados: " . count($ocupados) . "</p>";
        if (count($ocupados) > 0) {
            echo "<ul>";
            foreach ($ocupados as $horario) {
                echo "<li>‚è∞ {$horario}</li>";
            }
            echo "</ul>";
        }
    } catch (Exception $e) {
        echo "<p class='error'>‚ùå Erro ao listar hor√°rios ocupados: " . $e->getMessage() . "</p>";
    }
    
    // Teste 2: Hor√°rios dispon√≠veis (30min)
    try {
        $disponiveis = $agendamento->gerarHorariosDisponiveis($id_profissional, $data_teste);
        echo "<p class='success'>‚úÖ Hor√°rios dispon√≠veis (30min): " . count($disponiveis) . "</p>";
        if (count($disponiveis) > 0) {
            echo "<p class='info'>üìã Primeiros 10 hor√°rios:</p>";
            echo "<ul>";
            for ($i = 0; $i < min(10, count($disponiveis)); $i++) {
                echo "<li>üïê {$disponiveis[$i]}</li>";
            }
            if (count($disponiveis) > 10) {
                echo "<li>... e mais " . (count($disponiveis) - 10) . " hor√°rios</li>";
            }
            echo "</ul>";
        }
    } catch (Exception $e) {
        echo "<p class='error'>‚ùå Erro ao gerar hor√°rios dispon√≠veis: " . $e->getMessage() . "</p>";
    }
    
    // Teste 3: Hor√°rios com bloqueios
    try {
        $com_bloqueios = $agendamento->gerarHorariosDisponiveisComBloqueios($id_profissional, $data_teste);
        echo "<p class='success'>‚úÖ Hor√°rios dispon√≠veis com bloqueios: " . count($com_bloqueios) . "</p>";
        if (count($com_bloqueios) > 0) {
            echo "<p class='info'>üìã Primeiros 10 hor√°rios (com verifica√ß√£o de bloqueios):</p>";
            echo "<ul>";
            for ($i = 0; $i < min(10, count($com_bloqueios)); $i++) {
                echo "<li>üïê {$com_bloqueios[$i]}</li>";
            }
            if (count($com_bloqueios) > 10) {
                echo "<li>... e mais " . (count($com_bloqueios) - 10) . " hor√°rios</li>";
            }
            echo "</ul>";
        }
    } catch (Exception $e) {
        echo "<p class='error'>‚ùå Erro ao gerar hor√°rios com bloqueios: " . $e->getMessage() . "</p>";
    }
    
    echo "<h3>4. Teste de Bloqueio de Hor√°rios</h3>";
    
    // Testar bloqueio de hor√°rio
    $horario_teste = '14:30';
    try {
        $resultado = $agendamento->bloquearHorarioTemporariamente($id_profissional, $data_teste, $horario_teste, 'test_session', '127.0.0.1');
        if ($resultado) {
            echo "<p class='success'>‚úÖ Hor√°rio $horario_teste bloqueado com sucesso</p>";
            
            // Verificar se o hor√°rio foi realmente bloqueado
            $com_bloqueios_apos = $agendamento->gerarHorariosDisponiveisComBloqueios($id_profissional, $data_teste);
            $horario_bloqueado = !in_array($horario_teste, $com_bloqueios_apos);
            
            if ($horario_bloqueado) {
                echo "<p class='success'>‚úÖ Verifica√ß√£o: Hor√°rio $horario_teste n√£o est√° mais dispon√≠vel</p>";
            } else {
                echo "<p class='warning'>‚ö†Ô∏è Verifica√ß√£o: Hor√°rio $horario_teste ainda est√° dispon√≠vel</p>";
            }
            
            // Desbloquear o hor√°rio
            $desbloqueio = $agendamento->desbloquearHorario($id_profissional, $data_teste, $horario_teste, 'test_session');
            if ($desbloqueio) {
                echo "<p class='success'>‚úÖ Hor√°rio $horario_teste desbloqueado com sucesso</p>";
            }
        } else {
            echo "<p class='error'>‚ùå Falha ao bloquear hor√°rio $horario_teste</p>";
        }
    } catch (Exception $e) {
        echo "<p class='error'>‚ùå Erro no teste de bloqueio: " . $e->getMessage() . "</p>";
    }
    
    echo "<h3>5. Verifica√ß√£o de Intervalos</h3>";
    
    // Verificar se os intervalos s√£o realmente de 30 minutos
    if (isset($disponiveis) && count($disponiveis) >= 2) {
        $primeiro = $disponiveis[0];
        $segundo = $disponiveis[1];
        
        $time1 = strtotime($primeiro);
        $time2 = strtotime($segundo);
        $diferenca = ($time2 - $time1) / 60; // em minutos
        
        echo "<p class='info'>üîç Verifica√ß√£o de intervalo:</p>";
        echo "<p class='info'>‚Ä¢ Primeiro hor√°rio: $primeiro</p>";
        echo "<p class='info'>‚Ä¢ Segundo hor√°rio: $segundo</p>";
        echo "<p class='info'>‚Ä¢ Diferen√ßa: $diferenca minutos</p>";
        
        if ($diferenca == 30) {
            echo "<p class='success'>‚úÖ Intervalos de 30 minutos confirmados!</p>";
        } else {
            echo "<p class='error'>‚ùå Intervalos incorretos! Esperado: 30min, Encontrado: {$diferenca}min</p>";
        }
    }
    
} catch (Exception $e) {
    echo "<p class='error'>‚ùå Erro geral: " . $e->getMessage() . "</p>";
    echo "<p class='error'>Arquivo: " . $e->getFile() . " Linha: " . $e->getLine() . "</p>";
}

echo "<hr><p><strong>Teste do sistema completo finalizado!</strong></p>";
?>

<style>
.success { color: green; font-weight: bold; }
.error { color: red; font-weight: bold; }
.warning { color: orange; font-weight: bold; }
.info { color: blue; }
ul { margin-left: 20px; }
li { margin: 5px 0; }
</style>