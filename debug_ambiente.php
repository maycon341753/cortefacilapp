<?php
/**
 * Debug da detec√ß√£o de ambiente
 */

require_once 'config/database.php';

echo "<h2>üîç Debug Detec√ß√£o de Ambiente</h2>";

// Verificar vari√°veis de servidor
echo "<h3>1. Vari√°veis de Servidor</h3>";
echo "<p class='info'>SERVER_NAME: " . ($_SERVER['SERVER_NAME'] ?? 'n√£o definido') . "</p>";
echo "<p class='info'>HTTP_HOST: " . ($_SERVER['HTTP_HOST'] ?? 'n√£o definido') . "</p>";
echo "<p class='info'>DOCUMENT_ROOT: " . ($_SERVER['DOCUMENT_ROOT'] ?? 'n√£o definido') . "</p>";
echo "<p class='info'>SERVER_SOFTWARE: " . ($_SERVER['SERVER_SOFTWARE'] ?? 'n√£o definido') . "</p>";
echo "<p class='info'>SERVER_PORT: " . ($_SERVER['SERVER_PORT'] ?? 'n√£o definido') . "</p>";
echo "<p class='info'>PHP SAPI: " . php_sapi_name() . "</p>";

// Verificar arquivo .env.online
echo "<h3>2. Verifica√ß√£o de Arquivos</h3>";
$env_online_path = __DIR__ . '/.env.online';
echo "<p class='info'>Caminho .env.online: {$env_online_path}</p>";
if (file_exists($env_online_path)) {
    echo "<p class='error'>‚ùå Arquivo .env.online EXISTE</p>";
} else {
    echo "<p class='success'>‚úÖ Arquivo .env.online N√ÉO existe</p>";
}

// Simular a l√≥gica de detec√ß√£o
echo "<h3>3. Simula√ß√£o da L√≥gica de Detec√ß√£o</h3>";

// Passo 1: Verificar .env.online
if (file_exists($env_online_path)) {
    echo "<p class='error'>‚ùå FOR√áADO ONLINE: Arquivo .env.online existe</p>";
    $ambiente = 'online';
} else {
    echo "<p class='success'>‚úÖ Passo 1 OK: Arquivo .env.online n√£o existe</p>";
    
    // Passo 2: Verificar SERVER_NAME
    $serverName = $_SERVER['SERVER_NAME'] ?? $_SERVER['HTTP_HOST'] ?? '';
    echo "<p class='info'>Server name detectado: '{$serverName}'</p>";
    
    if (strpos($serverName, 'cortefacil.app') !== false) {
        echo "<p class='error'>‚ùå FOR√áADO ONLINE: Dom√≠nio cortefacil.app detectado</p>";
        $ambiente = 'online';
    } else {
        echo "<p class='success'>‚úÖ Passo 2 OK: N√£o √© dom√≠nio cortefacil.app</p>";
        
        // Passo 3: Verificar se n√£o √© localhost mas tem dom√≠nio
        if (!empty($serverName) && !in_array($serverName, ['localhost', '127.0.0.1', '::1'])) {
            echo "<p class='error'>‚ùå FOR√áADO ONLINE: Dom√≠nio real detectado (n√£o localhost)</p>";
            $ambiente = 'online';
        } else {
            echo "<p class='success'>‚úÖ Passo 3 OK: √â localhost ou sem dom√≠nio</p>";
            
            // Passo 4: Verificar CLI
            if (php_sapi_name() === 'cli') {
                echo "<p class='info'>üñ•Ô∏è Executando via CLI</p>";
                if (file_exists($env_online_path)) {
                    echo "<p class='error'>‚ùå FOR√áADO ONLINE: CLI com arquivo .env.online</p>";
                    $ambiente = 'online';
                } else {
                    echo "<p class='success'>‚úÖ CLI SEM .env.online = LOCAL</p>";
                    $ambiente = 'local';
                }
            } else {
                echo "<p class='info'>üåê Executando via web</p>";
                
                // Passo 5: Verificar hosts locais
                $localHosts = ['localhost', '127.0.0.1', '::1'];
                if (in_array($serverName, $localHosts)) {
                    echo "<p class='success'>‚úÖ Host local detectado = LOCAL</p>";
                    $ambiente = 'local';
                } else {
                    // Passo 6: Verificar XAMPP/WAMP
                    $docRoot = $_SERVER['DOCUMENT_ROOT'] ?? '';
                    if (strpos($docRoot, 'xampp') !== false || strpos($docRoot, 'wamp') !== false) {
                        echo "<p class='success'>‚úÖ XAMPP/WAMP detectado = LOCAL</p>";
                        $ambiente = 'local';
                    } else {
                        // Passo 7: Verificar servidor PHP built-in
                        $serverSoftware = $_SERVER['SERVER_SOFTWARE'] ?? '';
                        if (strpos($serverSoftware, 'PHP') !== false) {
                            echo "<p class='success'>‚úÖ Servidor PHP built-in = LOCAL</p>";
                            $ambiente = 'local';
                        } else {
                            // Passo 8: Verificar porta de desenvolvimento
                            $port = $_SERVER['SERVER_PORT'] ?? 80;
                            if (in_array($port, [3000, 8000, 8080, 8888, 9000])) {
                                echo "<p class='success'>‚úÖ Porta de desenvolvimento ({$port}) = LOCAL</p>";
                                $ambiente = 'local';
                            } else {
                                echo "<p class='error'>‚ùå Nenhuma condi√ß√£o local atendida = ONLINE</p>";
                                $ambiente = 'online';
                            }
                        }
                    }
                }
            }
        }
    }
}

echo "<h3>4. Resultado Final</h3>";
if ($ambiente === 'local') {
    echo "<p class='success'>‚úÖ AMBIENTE DETECTADO: LOCAL</p>";
} else {
    echo "<p class='error'>‚ùå AMBIENTE DETECTADO: ONLINE</p>";
}

// Testar a classe Database
echo "<h3>5. Teste da Classe Database</h3>";
$database = Database::getInstance();
$conn = $database->connect();

$stmt = $conn->query("SELECT DATABASE() as current_db");
$db_info = $stmt->fetch(PDO::FETCH_ASSOC);
echo "<p class='info'>üóÑÔ∏è Banco conectado: {$db_info['current_db']}</p>";

// Verificar se √© o banco local ou online
if ($db_info['current_db'] === 'u690889028_cortefacil') {
    // Verificar se √© local ou online testando uma query espec√≠fica
    try {
        $stmt = $conn->query("SELECT COUNT(*) as total FROM agendamentos");
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        echo "<p class='info'>üìä Registros na tabela agendamentos: {$result['total']}</p>";
        
        // Se conseguiu conectar no banco u690889028_cortefacil, pode ser local ou online
        // Vamos verificar o host da conex√£o
        $stmt = $conn->query("SELECT @@hostname as host");
        $host_info = $stmt->fetch(PDO::FETCH_ASSOC);
        echo "<p class='info'>üñ•Ô∏è Host do banco: {$host_info['host']}</p>";
        
    } catch (Exception $e) {
        echo "<p class='error'>‚ùå Erro ao testar banco: {$e->getMessage()}</p>";
    }
}

echo "<hr>";
echo "<p><strong>Debug de ambiente conclu√≠do!</strong></p>";

?>

<style>
.success { color: green; }
.error { color: red; }
.info { color: blue; }
</style>