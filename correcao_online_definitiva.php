<?php
/**
 * Corre√ß√£o Definitiva para CSRF Online
 * Este arquivo deve ser enviado para o servidor de produ√ß√£o
 * para resolver o problema de "Token de seguran√ßa inv√°lido"
 */

// For√ßar configura√ß√µes espec√≠ficas para ambiente online
if (session_status() == PHP_SESSION_NONE) {
    // Configura√ß√µes robustas para servidor online
    ini_set('session.cookie_httponly', 1);
    ini_set('session.use_only_cookies', 1);
    ini_set('session.cookie_lifetime', 0);
    ini_set('session.gc_maxlifetime', 7200); // 2 horas
    ini_set('session.gc_probability', 1);
    ini_set('session.gc_divisor', 1000);
    
    // Configura√ß√µes espec√≠ficas para HTTPS (ambiente online)
    if (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on') {
        ini_set('session.cookie_secure', 1);
    }
    
    // Configurar SameSite para compatibilidade
    if (PHP_VERSION_ID >= 70300) {
        ini_set('session.cookie_samesite', 'Lax');
    }
    
    // Nome espec√≠fico da sess√£o
    session_name('CORTEFACIL_ONLINE');
    
    // Iniciar sess√£o
    session_start();
}

/**
 * Fun√ß√£o CSRF corrigida para ambiente online
 * Resolve o problema de tokens diferentes
 */
function generateCSRFTokenOnlineFixed() {
    // Garantir sess√£o ativa
    if (session_status() !== PHP_SESSION_ACTIVE) {
        session_start();
    }
    
    // Chave espec√≠fica para evitar conflitos
    $token_key = 'csrf_token_online';
    $time_key = 'csrf_token_time_online';
    
    // Gerar token APENAS se n√£o existir
    if (!isset($_SESSION[$token_key])) {
        // M√©todo mais robusto de gera√ß√£o
        if (function_exists('random_bytes')) {
            $_SESSION[$token_key] = bin2hex(random_bytes(32));
        } elseif (function_exists('openssl_random_pseudo_bytes')) {
            $_SESSION[$token_key] = bin2hex(openssl_random_pseudo_bytes(32));
        } else {
            // Fallback seguro
            $_SESSION[$token_key] = hash('sha256', uniqid(mt_rand(), true) . microtime(true));
        }
        $_SESSION[$time_key] = time();
    }
    
    return $_SESSION[$token_key];
}

/**
 * Fun√ß√£o de verifica√ß√£o CSRF corrigida
 */
function verifyCSRFTokenOnlineFixed($token) {
    // Garantir sess√£o ativa
    if (session_status() !== PHP_SESSION_ACTIVE) {
        session_start();
    }
    
    $token_key = 'csrf_token_online';
    $time_key = 'csrf_token_time_online';
    
    // Verifica√ß√µes b√°sicas
    if (empty($token)) {
        return false;
    }
    
    if (!isset($_SESSION[$token_key])) {
        return false;
    }
    
    // Verificar expira√ß√£o (2 horas)
    if (isset($_SESSION[$time_key]) && (time() - $_SESSION[$time_key]) > 7200) {
        unset($_SESSION[$token_key], $_SESSION[$time_key]);
        return false;
    }
    
    // Compara√ß√£o ultra-segura
    $session_token = $_SESSION[$token_key];
    
    // Normalizar tokens (remover espa√ßos, quebras de linha)
    $token = trim($token);
    $session_token = trim($session_token);
    
    // Compara√ß√£o com hash_equals se dispon√≠vel
    if (function_exists('hash_equals')) {
        return hash_equals($session_token, $token);
    }
    
    // Fallback com compara√ß√£o direta
    return $session_token === $token;
}

/**
 * Fun√ß√£o para gerar campo HTML
 */
function generateCSRFFieldOnlineFixed() {
    $token = generateCSRFTokenOnlineFixed();
    return '<input type="hidden" name="csrf_token" value="' . htmlspecialchars($token, ENT_QUOTES, 'UTF-8') . '">';
}

// Se acessado diretamente, mostrar diagn√≥stico
if (basename($_SERVER['PHP_SELF']) === 'correcao_online_definitiva.php') {
    echo "<!DOCTYPE html>";
    echo "<html><head><meta charset='UTF-8'><title>Corre√ß√£o CSRF Online</title></head><body>";
    echo "<h1>üîß Corre√ß√£o CSRF - Ambiente Online</h1>";
    echo "<p><strong>Status:</strong> Arquivo carregado com sucesso!</p>";
    echo "<hr>";
    
    // Simular usu√°rio logado para teste
    if (!isset($_SESSION['usuario_id'])) {
        $_SESSION['usuario_id'] = 1;
        $_SESSION['usuario_nome'] = 'Teste Online';
        $_SESSION['tipo_usuario'] = 'parceiro';
    }
    
    echo "<h2>üìä Diagn√≥stico do Sistema Online</h2>";
    echo "<table border='1' cellpadding='8' cellspacing='0' style='border-collapse: collapse; width: 100%;'>";
    echo "<tr><td><strong>Servidor</strong></td><td>" . ($_SERVER['HTTP_HOST'] ?? 'localhost') . "</td></tr>";
    echo "<tr><td><strong>PHP Version</strong></td><td>" . PHP_VERSION . "</td></tr>";
    echo "<tr><td><strong>Session Status</strong></td><td>" . (session_status() === PHP_SESSION_ACTIVE ? 'ATIVA ‚úì' : 'INATIVA ‚úó') . "</td></tr>";
    echo "<tr><td><strong>Session ID</strong></td><td>" . session_id() . "</td></tr>";
    echo "<tr><td><strong>Session Name</strong></td><td>" . session_name() . "</td></tr>";
    echo "<tr><td><strong>HTTPS</strong></td><td>" . (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on' ? 'SIM ‚úì' : 'N√ÉO ‚úó') . "</td></tr>";
    echo "<tr><td><strong>Cookie Secure</strong></td><td>" . (ini_get('session.cookie_secure') ? 'SIM ‚úì' : 'N√ÉO ‚úó') . "</td></tr>";
    echo "<tr><td><strong>Cookie HttpOnly</strong></td><td>" . (ini_get('session.cookie_httponly') ? 'SIM ‚úì' : 'N√ÉO ‚úó') . "</td></tr>";
    echo "<tr><td><strong>random_bytes</strong></td><td>" . (function_exists('random_bytes') ? 'DISPON√çVEL ‚úì' : 'N√ÉO DISPON√çVEL ‚úó') . "</td></tr>";
    echo "<tr><td><strong>hash_equals</strong></td><td>" . (function_exists('hash_equals') ? 'DISPON√çVEL ‚úì' : 'N√ÉO DISPON√çVEL ‚úó') . "</td></tr>";
    echo "</table>";
    
    echo "<h2>üß™ Teste das Fun√ß√µes Corrigidas</h2>";
    
    // Limpar tokens para teste limpo
    unset($_SESSION['csrf_token_online'], $_SESSION['csrf_token_time_online']);
    
    $token_gerado = generateCSRFTokenOnlineFixed();
    echo "<p><strong>Token gerado:</strong> " . substr($token_gerado, 0, 30) . "...</p>";
    echo "<p><strong>Tamanho do token:</strong> " . strlen($token_gerado) . " caracteres</p>";
    
    $verificacao = verifyCSRFTokenOnlineFixed($token_gerado);
    echo "<p><strong>Verifica√ß√£o:</strong> " . ($verificacao ? 'V√ÅLIDO ‚úì' : 'INV√ÅLIDO ‚úó') . "</p>";
    
    // Teste de persist√™ncia
    $token_segundo = generateCSRFTokenOnlineFixed();
    echo "<p><strong>Segundo token (deve ser igual):</strong> " . substr($token_segundo, 0, 30) . "...</p>";
    echo "<p><strong>Tokens iguais:</strong> " . ($token_gerado === $token_segundo ? 'SIM ‚úì' : 'N√ÉO ‚úó') . "</p>";
    
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        echo "<div style='background: #f8f9fa; padding: 20px; border: 2px solid #007bff; border-radius: 8px; margin: 20px 0;'>";
        echo "<h4>üìã Resultado do Teste POST</h4>";
        
        $csrf_recebido = $_POST['csrf_token'] ?? '';
        
        echo "<h5>üîç Debug Detalhado:</h5>";
        echo "<ul>";
        echo "<li><strong>Token recebido:</strong> " . (empty($csrf_recebido) ? 'VAZIO ‚úó' : substr($csrf_recebido, 0, 30) . '... (' . strlen($csrf_recebido) . ' chars)') . "</li>";
        echo "<li><strong>Token na sess√£o:</strong> " . (isset($_SESSION['csrf_token_online']) ? substr($_SESSION['csrf_token_online'], 0, 30) . '... (' . strlen($_SESSION['csrf_token_online']) . ' chars)' : 'N√ÉO EXISTE ‚úó') . "</li>";
        
        if (!empty($csrf_recebido) && isset($_SESSION['csrf_token_online'])) {
            echo "<li><strong>Compara√ß√£o direta (===):</strong> " . ($csrf_recebido === $_SESSION['csrf_token_online'] ? 'IGUAIS ‚úì' : 'DIFERENTES ‚úó') . "</li>";
            if (function_exists('hash_equals')) {
                echo "<li><strong>hash_equals():</strong> " . (hash_equals($_SESSION['csrf_token_online'], $csrf_recebido) ? 'IGUAIS ‚úì' : 'DIFERENTES ‚úó') . "</li>";
            }
        }
        
        if (isset($_SESSION['csrf_token_time_online'])) {
            $idade_token = time() - $_SESSION['csrf_token_time_online'];
            echo "<li><strong>Idade do token:</strong> " . $idade_token . " segundos</li>";
            echo "<li><strong>Token expirado:</strong> " . ($idade_token > 7200 ? 'SIM (>2h) ‚úó' : 'N√ÉO ‚úì') . "</li>";
        }
        echo "</ul>";
        
        try {
            if (!verifyCSRFTokenOnlineFixed($_POST['csrf_token'] ?? '')) {
                throw new Exception('Token de seguran√ßa inv√°lido.');
            }
            
            echo "<div style='background: #d4edda; padding: 15px; border: 1px solid #c3e6cb; border-radius: 5px; color: #155724;'>";
            echo "<h5>üéâ SUCESSO TOTAL!</h5>";
            echo "<p>‚úÖ Token CSRF validado com sucesso!</p>";
            echo "<p>‚úÖ A corre√ß√£o funcionou no ambiente online!</p>";
            echo "<p>‚úÖ O problema foi resolvido definitivamente!</p>";
            echo "</div>";
            
        } catch (Exception $e) {
            echo "<div style='background: #f8d7da; padding: 15px; border: 1px solid #f5c6cb; border-radius: 5px; color: #721c24;'>";
            echo "<h5>‚ùå ERRO: " . htmlspecialchars($e->getMessage()) . "</h5>";
            echo "<p>‚ö†Ô∏è Ainda h√° problemas no ambiente online.</p>";
            echo "</div>";
        }
        
        echo "</div>";
    }
    
    echo "<h3>üß™ Formul√°rio de Teste Online</h3>";
    echo "<form method='POST' style='background: #ffffff; padding: 25px; border: 2px solid #dc3545; border-radius: 10px; margin: 20px 0;'>";
    echo "<h4 style='color: #dc3545;'>üåê Teste Ambiente Online</h4>";
    
    echo generateCSRFFieldOnlineFixed();
    
    echo "<div style='background: #e9ecef; padding: 10px; border-radius: 5px; margin-bottom: 15px;'>";
    echo "<small><strong>Token do formul√°rio:</strong> " . substr(generateCSRFTokenOnlineFixed(), 0, 40) . "...</small>";
    echo "</div>";
    
    echo "<div style='margin-bottom: 15px;'>";
    echo "<label style='display: block; font-weight: bold; margin-bottom: 5px;'>Nome do Sal√£o *</label>";
    echo "<input type='text' name='nome' value='Sal√£o Online Corrigido' style='width: 100%; padding: 10px; border: 1px solid #ced4da; border-radius: 5px;' required>";
    echo "</div>";
    
    echo "<button type='submit' style='background: #dc3545; color: white; padding: 12px 30px; border: none; border-radius: 5px; cursor: pointer; font-size: 16px; font-weight: bold;'>üß™ Testar Corre√ß√£o Online</button>";
    echo "</form>";
    
    echo "<h2>üìã Instru√ß√µes de Implementa√ß√£o</h2>";
    echo "<div style='background: #d1ecf1; padding: 20px; border: 1px solid #bee5eb; border-radius: 8px;'>";
    echo "<h4>üîß Para aplicar a corre√ß√£o no servidor online:</h4>";
    echo "<ol>";
    echo "<li><strong>Substitua as fun√ß√µes no auth.php:</strong><br>";
    echo "- Substitua <code>generateCSRFToken()</code> por <code>generateCSRFTokenOnlineFixed()</code><br>";
    echo "- Substitua <code>verifyCSRFToken()</code> por <code>verifyCSRFTokenOnlineFixed()</code></li>";
    echo "<li><strong>Ou inclua este arquivo:</strong> <code>require_once 'correcao_online_definitiva.php';</code> no in√≠cio do auth.php</li>";
    echo "<li><strong>Atualize as chamadas:</strong> Use as novas fun√ß√µes em todos os formul√°rios</li>";
    echo "<li><strong>Teste:</strong> Verifique se o formul√°rio do sal√£o funciona sem erros</li>";
    echo "</ol>";
    echo "</div>";
    
    echo "<h2>üîó Pr√≥ximos Passos</h2>";
    echo "<ul>";
    echo "<li>Se este teste funcionar, a corre√ß√£o est√° pronta para produ√ß√£o</li>";
    echo "<li>Aplique as altera√ß√µes no servidor online</li>";
    echo "<li>Teste em <strong>https://cortefacil.app/parceiro/salao.php</strong></li>";
    echo "<li>Monitore os logs para garantir que n√£o h√° mais erros de CSRF</li>";
    echo "</ul>";
    
    echo "</body></html>";
}
?>