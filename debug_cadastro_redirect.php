<?php
/**
 * Debug espec√≠fico para redirecionamentos no cadastro
 */

// Ativar exibi√ß√£o de erros
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

echo "<h2>Debug - Redirecionamentos do Cadastro</h2>";
echo "<hr>";

// Simular diferentes cen√°rios
echo "<h3>1. Testando includes</h3>";

try {
    require_once __DIR__ . '/includes/auth.php';
    require_once __DIR__ . '/includes/functions.php';
    require_once __DIR__ . '/models/usuario.php';
    echo "‚úÖ Includes carregados<br>";
} catch (Exception $e) {
    echo "‚ùå Erro nos includes: " . $e->getMessage() . "<br>";
    exit;
}

echo "<br><h3>2. Testando fun√ß√£o isLoggedIn()</h3>";
$loggedIn = isLoggedIn();
echo "Status: " . ($loggedIn ? 'Logado' : 'N√£o logado') . "<br>";

if ($loggedIn) {
    echo "‚ö†Ô∏è Usu√°rio logado - seria redirecionado para index.php<br>";
    echo "<p><strong>PROBLEMA IDENTIFICADO:</strong> Se o usu√°rio estiver logado, ele ser√° redirecionado e a p√°gina ficar√° em branco.</p>";
} else {
    echo "‚úÖ Usu√°rio n√£o logado - pode acessar cadastro<br>";
}

echo "<br><h3>3. Testando par√¢metros</h3>";
$_GET['tipo'] = 'cliente';
$tipo_usuario = $_GET['tipo'] ?? 'cliente';
echo "Tipo de usu√°rio: " . $tipo_usuario . "<br>";

// Validar tipo de usu√°rio
if (!in_array($tipo_usuario, ['cliente', 'parceiro'])) {
    $tipo_usuario = 'cliente';
    echo "Tipo ajustado para: cliente<br>";
} else {
    echo "Tipo v√°lido: " . $tipo_usuario . "<br>";
}

echo "<br><h3>4. Testando fun√ß√£o setFlashMessage</h3>";
try {
    setFlashMessage('test', 'Mensagem de teste');
    echo "‚úÖ setFlashMessage funcionou<br>";
    
    $flash = getFlashMessage();
    if ($flash) {
        echo "‚úÖ getFlashMessage funcionou: " . $flash['message'] . "<br>";
    } else {
        echo "‚ùå getFlashMessage n√£o retornou dados<br>";
    }
} catch (Exception $e) {
    echo "‚ùå Erro em setFlashMessage: " . $e->getMessage() . "<br>";
}

echo "<br><h3>5. Simulando POST de cadastro</h3>";

// Simular dados POST
$_POST = [
    'nome' => 'Teste Cliente',
    'email' => 'teste@exemplo.com',
    'telefone' => '11999999999',
    'cpf' => '12345678901',
    'senha' => '123456',
    'confirmar_senha' => '123456',
    'tipo_usuario' => 'cliente'
];

$_SERVER['REQUEST_METHOD'] = 'POST';

echo "Dados POST simulados:<br>";
echo "<pre>" . print_r($_POST, true) . "</pre>";

echo "<br><h3>6. Testando valida√ß√µes</h3>";

$nome = sanitizeInput($_POST['nome'] ?? '');
$email = sanitizeInput($_POST['email'] ?? '');
$telefone = sanitizeInput($_POST['telefone'] ?? '');
$senha = $_POST['senha'] ?? '';
$confirmar_senha = $_POST['confirmar_senha'] ?? '';
$tipo_usuario = sanitizeInput($_POST['tipo_usuario'] ?? 'cliente');

echo "Nome: " . $nome . "<br>";
echo "Email: " . $email . "<br>";
echo "Telefone: " . $telefone . "<br>";
echo "Tipo: " . $tipo_usuario . "<br>";

// Campos espec√≠ficos por tipo de usu√°rio
$cpf = '';
if ($tipo_usuario === 'cliente') {
    $cpf = sanitizeInput($_POST['cpf'] ?? '');
    echo "CPF: " . $cpf . "<br>";
}

echo "<br><h3>7. Testando valida√ß√µes b√°sicas</h3>";

$erro = '';

if (empty($nome) || empty($email) || empty($senha)) {
    $erro = 'Campos obrigat√≥rios n√£o preenchidos.';
} elseif ($senha !== $confirmar_senha) {
    $erro = 'Senhas n√£o coincidem.';
} elseif ($tipo_usuario === 'cliente' && !validarCPF($cpf)) {
    $erro = 'CPF inv√°lido.';
}

if ($erro) {
    echo "‚ùå Erro de valida√ß√£o: " . $erro . "<br>";
} else {
    echo "‚úÖ Valida√ß√µes b√°sicas passaram<br>";
}

echo "<br><h3>8. Testando conex√£o com banco</h3>";

try {
    $usuario = new Usuario();
    echo "‚úÖ Objeto Usuario criado<br>";
    
    // Testar verifica√ß√£o de email (sem cadastrar)
    $emailExiste = $usuario->emailExiste($email);
    echo "Email existe: " . ($emailExiste ? 'Sim' : 'N√£o') . "<br>";
    
    if ($tipo_usuario === 'cliente') {
        $cpfExiste = $usuario->cpfExiste($cpf);
        echo "CPF existe: " . ($cpfExiste ? 'Sim' : 'N√£o') . "<br>";
    }
    
} catch (Exception $e) {
    echo "‚ùå Erro ao testar banco: " . $e->getMessage() . "<br>";
}

echo "<br><h3>9. An√°lise do Problema</h3>";
echo "<div style='background: #fff3cd; padding: 15px; border: 1px solid #ffc107; border-radius: 5px;'>";
echo "<h4>Poss√≠veis causas da p√°gina em branco:</h4>";
echo "<ol>";
echo "<li><strong>Usu√°rio j√° logado:</strong> Se isLoggedIn() retorna true, h√° redirecionamento para index.php</li>";
echo "<li><strong>Erro fatal n√£o capturado:</strong> Algum erro PHP que n√£o est√° sendo exibido</li>";
echo "<li><strong>Problema de sess√£o:</strong> Sess√£o n√£o iniciada ou corrompida</li>";
echo "<li><strong>Erro de include:</strong> Algum arquivo n√£o encontrado</li>";
echo "<li><strong>Problema de codifica√ß√£o:</strong> Caracteres especiais causando erro</li>";
echo "</ol>";
echo "</div>";

echo "<br><h3>10. Solu√ß√µes Recomendadas</h3>";
echo "<div style='background: #d4edda; padding: 15px; border: 1px solid #c3e6cb; border-radius: 5px;'>";
echo "<h4>Para corrigir o problema:</h4>";
echo "<ol>";
echo "<li>Verificar se o usu√°rio n√£o est√° logado inadvertidamente</li>";
echo "<li>Adicionar mais logs de debug no arquivo original</li>";
echo "<li>Usar a vers√£o simplificada como alternativa</li>";
echo "<li>Verificar configura√ß√µes do servidor online</li>";
echo "</ol>";
echo "</div>";

echo "<br><p><a href='cadastro_cliente_simples.php'>üîó Usar vers√£o simplificada (funcional)</a></p>";
echo "<p><a href='cadastro.php?tipo=cliente'>üîó Tentar vers√£o original</a></p>";

?>