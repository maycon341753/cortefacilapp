<?php
/**
 * CORRE√á√ÉO DEFINITIVA PARA PROBLEMA DE CSRF ONLINE
 * Este script aplica a corre√ß√£o final para resolver o erro de token na p√°gina de profissionais
 */

// Detectar ambiente
$isOnline = !in_array($_SERVER['HTTP_HOST'] ?? 'localhost', ['localhost', '127.0.0.1']);

if ($isOnline) {
    // Configura√ß√µes espec√≠ficas para ambiente online
    ini_set('session.cookie_secure', 1);
    ini_set('session.cookie_httponly', 1);
    ini_set('session.use_strict_mode', 1);
    ini_set('session.cookie_samesite', 'Strict');
}

session_start();

echo "<h1>üîß CORRE√á√ÉO DEFINITIVA CSRF - AMBIENTE " . ($isOnline ? 'ONLINE' : 'LOCAL') . "</h1>";
echo "<style>
    body { font-family: Arial, sans-serif; margin: 20px; }
    .success { background: #d4edda; padding: 15px; border: 1px solid #c3e6cb; border-radius: 5px; margin: 10px 0; color: #155724; }
    .error { background: #f8d7da; padding: 15px; border: 1px solid #f5c6cb; border-radius: 5px; margin: 10px 0; color: #721c24; }
    .warning { background: #fff3cd; padding: 15px; border: 1px solid #ffeaa7; border-radius: 5px; margin: 10px 0; color: #856404; }
    .info { background: #d1ecf1; padding: 15px; border: 1px solid #bee5eb; border-radius: 5px; margin: 10px 0; color: #0c5460; }
    .code { background: #f8f9fa; padding: 10px; border-radius: 3px; font-family: monospace; margin: 5px 0; }
</style>";

// 1. BACKUP DO ARQUIVO ORIGINAL
echo "<h2>üìã 1. Backup e Prepara√ß√£o</h2>";

$arquivo_auth = __DIR__ . '/includes/auth.php';
$arquivo_backup = __DIR__ . '/includes/auth_backup_' . date('Y-m-d_H-i-s') . '.php';

if (file_exists($arquivo_auth)) {
    if (copy($arquivo_auth, $arquivo_backup)) {
        echo "<div class='success'>‚úÖ Backup criado: " . basename($arquivo_backup) . "</div>";
    } else {
        echo "<div class='warning'>‚ö†Ô∏è N√£o foi poss√≠vel criar backup</div>";
    }
} else {
    echo "<div class='error'>‚ùå Arquivo auth.php n√£o encontrado</div>";
}

// 2. APLICAR CORRE√á√ÉO NO ARQUIVO AUTH.PHP
echo "<h2>üîß 2. Aplicando Corre√ß√£o</h2>";

$correcao_aplicada = false;

if (file_exists($arquivo_auth)) {
    $conteudo_original = file_get_contents($arquivo_auth);
    
    // Verificar se j√° tem as fun√ß√µes corrigidas
    if (strpos($conteudo_original, 'generateCSRFTokenFixed') !== false) {
        echo "<div class='info'>‚ÑπÔ∏è Corre√ß√£o j√° aplicada anteriormente</div>";
    } else {
        // Preparar o c√≥digo corrigido
        $codigo_corrigido = '
/**
 * FUN√á√ïES CSRF CORRIGIDAS PARA AMBIENTE ONLINE
 * Vers√£o definitiva que resolve problemas de token
 */

/**
 * Gera token CSRF de forma consistente
 */
function generateCSRFTokenFixed() {
    // Garantir sess√£o ativa
    if (session_status() !== PHP_SESSION_ACTIVE) {
        session_start();
    }
    
    $token_key = "csrf_token_fixed";
    $time_key = "csrf_token_time_fixed";
    
    // Verificar se precisa gerar novo token
    $need_new_token = false;
    
    if (!isset($_SESSION[$token_key])) {
        $need_new_token = true;
    } elseif (isset($_SESSION[$time_key]) && (time() - $_SESSION[$time_key]) > 7200) {
        // Token expira em 2 horas
        $need_new_token = true;
        unset($_SESSION[$token_key], $_SESSION[$time_key]);
    } elseif (!isset($_SESSION[$time_key])) {
        $need_new_token = true;
    }
    
    if ($need_new_token) {
        // Gerar token seguro
        if (function_exists("random_bytes")) {
            $_SESSION[$token_key] = bin2hex(random_bytes(32));
        } elseif (function_exists("openssl_random_pseudo_bytes")) {
            $_SESSION[$token_key] = bin2hex(openssl_random_pseudo_bytes(32));
        } else {
            $_SESSION[$token_key] = hash("sha256", uniqid(mt_rand(), true) . microtime(true));
        }
        $_SESSION[$time_key] = time();
    }
    
    return $_SESSION[$token_key];
}

/**
 * Verifica token CSRF de forma robusta
 */
function verifyCSRFTokenFixed($token) {
    // Garantir sess√£o ativa
    if (session_status() !== PHP_SESSION_ACTIVE) {
        session_start();
    }
    
    $token_key = "csrf_token_fixed";
    $time_key = "csrf_token_time_fixed";
    
    // Normalizar tokens
    $received_token = trim($token);
    $session_token = isset($_SESSION[$token_key]) ? trim($_SESSION[$token_key]) : "";
    
    // Verifica√ß√µes b√°sicas
    if (empty($received_token) || empty($session_token)) {
        return false;
    }
    
    // Verificar expira√ß√£o
    if (isset($_SESSION[$time_key])) {
        $age = time() - $_SESSION[$time_key];
        if ($age > 7200) { // 2 horas
            unset($_SESSION[$token_key], $_SESSION[$time_key]);
            return false;
        }
    }
    
    // Compara√ß√£o segura
    if (function_exists("hash_equals")) {
        return hash_equals($session_token, $received_token);
    } else {
        return $session_token === $received_token;
    }
}

/**
 * Gera campo HTML com token CSRF
 */
function generateCSRFFieldFixed() {
    $token = generateCSRFTokenFixed();
    return "<input type=\"hidden\" name=\"csrf_token\" value=\"" . htmlspecialchars($token) . "\">";
}

/**
 * Aliases para compatibilidade
 */
if (!function_exists("generateCSRFToken")) {
    function generateCSRFToken() {
        return generateCSRFTokenFixed();
    }
}

if (!function_exists("verifyCSRFToken")) {
    function verifyCSRFToken($token) {
        return verifyCSRFTokenFixed($token);
    }
}

if (!function_exists("generateCsrfToken")) {
    function generateCsrfToken() {
        return generateCSRFFieldFixed();
    }
}

if (!function_exists("verifyCsrfToken")) {
    function verifyCsrfToken($token) {
        return verifyCSRFTokenFixed($token);
    }
}
';
        
        // Adicionar o c√≥digo corrigido ao final do arquivo
        $conteudo_corrigido = $conteudo_original . $codigo_corrigido;
        
        if (file_put_contents($arquivo_auth, $conteudo_corrigido)) {
            echo "<div class='success'>‚úÖ Corre√ß√£o aplicada com sucesso no arquivo auth.php</div>";
            $correcao_aplicada = true;
        } else {
            echo "<div class='error'>‚ùå Erro ao aplicar corre√ß√£o no arquivo auth.php</div>";
        }
    }
} else {
    echo "<div class='error'>‚ùå Arquivo auth.php n√£o encontrado para corre√ß√£o</div>";
}

// 3. TESTAR A CORRE√á√ÉO
echo "<h2>üß™ 3. Teste da Corre√ß√£o</h2>";

if ($correcao_aplicada || strpos(file_get_contents($arquivo_auth), 'generateCSRFTokenFixed') !== false) {
    // Incluir o arquivo corrigido
    require_once $arquivo_auth;
    
    try {
        // Testar gera√ß√£o de token
        $token_teste = generateCSRFTokenFixed();
        echo "<div class='success'>‚úÖ Token gerado com sucesso</div>";
        echo "<div class='info'>Token: " . substr($token_teste, 0, 20) . "... (" . strlen($token_teste) . " chars)</div>";
        
        // Testar verifica√ß√£o
        $verif_resultado = verifyCSRFTokenFixed($token_teste);
        if ($verif_resultado) {
            echo "<div class='success'>‚úÖ Verifica√ß√£o de token funcionando</div>";
        } else {
            echo "<div class='error'>‚ùå Falha na verifica√ß√£o de token</div>";
        }
        
        // Testar aliases
        $token_alias = generateCSRFToken();
        $verif_alias = verifyCSRFToken($token_alias);
        
        if ($verif_alias) {
            echo "<div class='success'>‚úÖ Fun√ß√µes de compatibilidade funcionando</div>";
        } else {
            echo "<div class='warning'>‚ö†Ô∏è Problema com fun√ß√µes de compatibilidade</div>";
        }
        
    } catch (Exception $e) {
        echo "<div class='error'>‚ùå Erro ao testar corre√ß√£o: " . $e->getMessage() . "</div>";
    }
}

// 4. TESTE PR√ÅTICO COM FORMUL√ÅRIO
echo "<h2>üéØ 4. Teste Pr√°tico Final</h2>";

// Processar teste se enviado
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['teste_final'])) {
    echo "<h3>üìä Resultado do Teste Final:</h3>";
    
    $token_recebido = $_POST['csrf_token'] ?? '';
    
    try {
        if (function_exists('verifyCSRFTokenFixed')) {
            $resultado = verifyCSRFTokenFixed($token_recebido);
        } elseif (function_exists('verifyCSRFToken')) {
            $resultado = verifyCSRFToken($token_recebido);
        } else {
            throw new Exception('Nenhuma fun√ß√£o de verifica√ß√£o dispon√≠vel');
        }
        
        if ($resultado) {
            echo "<div class='success'>";
            echo "<h4>üéâ SUCESSO TOTAL!</h4>";
            echo "<p>‚úÖ Token CSRF validado com sucesso!</p>";
            echo "<p>‚úÖ A corre√ß√£o foi aplicada corretamente!</p>";
            echo "<p>‚úÖ O problema na p√°gina de profissionais deve estar resolvido!</p>";
            echo "</div>";
        } else {
            echo "<div class='error'>";
            echo "<h4>‚ùå AINDA H√Å PROBLEMAS</h4>";
            echo "<p>‚ùå Token CSRF inv√°lido!</p>";
            echo "<p>‚ö†Ô∏è Pode ser necess√°ria interven√ß√£o manual adicional.</p>";
            echo "</div>";
        }
        
    } catch (Exception $e) {
        echo "<div class='error'>‚ùå Erro no teste: " . $e->getMessage() . "</div>";
    }
}

// Gerar formul√°rio de teste
if (function_exists('generateCSRFTokenFixed')) {
    $form_token = generateCSRFTokenFixed();
} elseif (function_exists('generateCSRFToken')) {
    $form_token = generateCSRFToken();
} else {
    $form_token = 'ERRO_NO_TOKEN';
}

echo "<form method='POST' style='background: #f8f9fa; padding: 20px; border-radius: 5px; margin: 20px 0;'>";
echo "<h4>üß™ Teste Final da Corre√ß√£o CSRF</h4>";
echo "<input type='hidden' name='csrf_token' value='{$form_token}'>";
echo "<input type='hidden' name='teste_final' value='1'>";
echo "<div style='margin-bottom: 15px;'>";
echo "<label>Dados de teste:</label><br>";
echo "<input type='text' name='dados_teste' value='Corre√ß√£o CSRF Aplicada' style='width: 300px; padding: 8px; border: 1px solid #ddd; border-radius: 3px;'>";
echo "</div>";
echo "<div style='margin-bottom: 15px;'>";
echo "<label>Token CSRF:</label><br>";
echo "<input type='text' value='" . substr($form_token, 0, 40) . "...' readonly style='width: 300px; padding: 8px; border: 1px solid #ddd; border-radius: 3px; background: #f8f9fa;'>";
echo "</div>";
echo "<button type='submit' style='background: #28a745; color: white; padding: 12px 24px; border: none; border-radius: 3px; cursor: pointer; font-size: 16px;'>üöÄ TESTAR CORRE√á√ÉO FINAL</button>";
echo "</form>";

// 5. INSTRU√á√ïES FINAIS
echo "<h2>üìã 5. Instru√ß√µes Finais</h2>";

if ($isOnline) {
    echo "<div class='success'>";
    echo "<h4>üåê Ambiente Online - Corre√ß√£o Aplicada</h4>";
    echo "<p><strong>A corre√ß√£o foi aplicada diretamente no servidor online!</strong></p>";
    echo "<ul>";
    echo "<li>‚úÖ Fun√ß√µes CSRF corrigidas adicionadas ao auth.php</li>";
    echo "<li>‚úÖ Configura√ß√µes de sess√£o segura aplicadas</li>";
    echo "<li>‚úÖ Backup do arquivo original criado</li>";
    echo "</ul>";
    echo "</div>";
} else {
    echo "<div class='warning'>";
    echo "<h4>üè† Ambiente Local</h4>";
    echo "<p>Para aplicar no servidor online:</p>";
    echo "<ol>";
    echo "<li>Fa√ßa upload deste arquivo para o servidor</li>";
    echo "<li>Acesse: https://cortefacil.app/correcao_csrf_definitiva_online.php</li>";
    echo "<li>Execute a corre√ß√£o no ambiente de produ√ß√£o</li>";
    echo "<li>Teste a p√°gina de profissionais</li>";
    echo "</ol>";
    echo "</div>";
}

echo "<div class='info'>";
echo "<h4>üéØ Pr√≥ximos Passos</h4>";
echo "<ol>";
echo "<li><strong>Testar p√°gina de profissionais:</strong> Acesse /parceiro/profissionais.php</li>";
echo "<li><strong>Tentar cadastrar profissional:</strong> Preencha o formul√°rio e envie</li>";
echo "<li><strong>Verificar logs:</strong> Se ainda houver erro, consulte os logs</li>";
echo "<li><strong>Remover este arquivo:</strong> Por seguran√ßa, remova ap√≥s o uso</li>";
echo "</ol>";
echo "</div>";

echo "<hr>";
echo "<div style='text-align: center; margin: 30px 0;'>";
echo "<p><a href='/parceiro/profissionais.php' style='background: #007bff; color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px; margin: 5px; font-size: 16px;'>üéØ TESTAR P√ÅGINA DE PROFISSIONAIS</a></p>";
echo "<p><small>Corre√ß√£o aplicada em: " . date('Y-m-d H:i:s') . "</small></p>";
echo "</div>";
?>