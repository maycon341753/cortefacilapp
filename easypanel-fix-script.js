const https = require('https');
const http = require('http');

// Configura√ß√µes do EasyPanel
const config = {
    domain: 'cortefacil.app',
    backendPort: 3001,
    apiPath: '/api'
};

// Fun√ß√£o para testar se backend est√° rodando
function testBackend(url, timeout = 5000) {
    return new Promise((resolve) => {
        const isHttps = url.startsWith('https');
        const client = isHttps ? https : http;
        
        const req = client.get(url, { timeout }, (res) => {
            let data = '';
            res.on('data', chunk => data += chunk);
            res.on('end', () => {
                resolve({
                    success: true,
                    status: res.statusCode,
                    server: res.headers.server || 'Unknown',
                    isBackend: !data.includes('<!DOCTYPE html>') && res.headers.server !== 'Vercel'
                });
            });
        });
        
        req.on('error', () => resolve({ success: false, error: 'Connection failed' }));
        req.on('timeout', () => {
            req.destroy();
            resolve({ success: false, error: 'Timeout' });
        });
    });
}

// Fun√ß√£o principal de diagn√≥stico e corre√ß√£o
async function fixEasyPanel() {
    console.log('üîß SCRIPT DE CORRE√á√ÉO EASYPANEL');
    console.log('=' .repeat(50));
    
    // 1. Testar backend direto na porta 3001
    console.log('\n1Ô∏è‚É£ Testando backend na porta 3001...');
    const backendDirect = await testBackend(`https://${config.domain}:${config.backendPort}/health`);
    
    if (backendDirect.success && backendDirect.isBackend) {
        console.log('‚úÖ Backend est√° rodando na porta 3001!');
    } else {
        console.log('‚ùå Backend N√ÉO est√° acess√≠vel na porta 3001');
        console.log('\nüö® A√á√ÉO NECESS√ÅRIA NO EASYPANEL:');
        console.log('1. Acesse: https://easypanel.io');
        console.log('2. V√° em Services ‚Üí Backend');
        console.log('3. Verifique se o container est√° "Running"');
        console.log('4. Se estiver "Stopped", clique em "Start"');
        console.log('5. Verifique os logs para erros');
        console.log('\nüìã Configura√ß√µes necess√°rias:');
        console.log('   - Port: 3001');
        console.log('   - Environment: NODE_ENV=production');
        console.log('   - Health Check: /health');
    }
    
    // 2. Testar proxy /api
    console.log('\n2Ô∏è‚É£ Testando proxy /api...');
    const apiProxy = await testBackend(`https://${config.domain}/api/health`);
    
    if (apiProxy.success && apiProxy.isBackend) {
        console.log('‚úÖ Proxy /api est√° funcionando!');
    } else {
        console.log('‚ùå Proxy /api N√ÉO est√° configurado');
        if (apiProxy.server === 'Vercel') {
            console.log('‚ö†Ô∏è  Requests /api est√£o indo para Vercel!');
        }
        
        console.log('\nüö® CONFIGURA√á√ÉO DE PROXY NECESS√ÅRIA:');
        console.log('\nüìã Op√ß√£o 1 - Proxy Rules no EasyPanel:');
        console.log('1. Acesse: Services ‚Üí Proxy/Load Balancer');
        console.log('2. Adicione nova regra:');
        console.log('   Path: /api/*');
        console.log('   Target: http://backend-service:3001');
        console.log('   Strip Path: false');
        
        console.log('\nüìã Op√ß√£o 2 - Configura√ß√£o Nginx:');
        console.log('Adicione no arquivo de configura√ß√£o:');
        console.log('```nginx');
        console.log('location /api/ {');
        console.log('    proxy_pass http://backend-service:3001/;');
        console.log('    proxy_set_header Host $host;');
        console.log('    proxy_set_header X-Real-IP $remote_addr;');
        console.log('    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;');
        console.log('    proxy_set_header X-Forwarded-Proto $scheme;');
        console.log('}');
        console.log('```');
        
        console.log('\nüìã Op√ß√£o 3 - Subdom√≠nio (Alternativa):');
        console.log('1. Criar subdom√≠nio: api.cortefacil.app');
        console.log('2. Apontar para o backend service');
        console.log('3. Atualizar frontend para usar: https://api.cortefacil.app');
    }
    
    // 3. Resumo das a√ß√µes
    console.log('\nüìä RESUMO DAS A√á√ïES NECESS√ÅRIAS:');
    console.log('=' .repeat(50));
    
    if (!backendDirect.success || !backendDirect.isBackend) {
        console.log('üö® URGENTE: Iniciar container backend no EasyPanel');
    }
    
    if (!apiProxy.success || !apiProxy.isBackend) {
        console.log('üö® URGENTE: Configurar proxy /api ‚Üí backend:3001');
    }
    
    console.log('\n‚úÖ Ap√≥s as corre√ß√µes, execute novamente este script para verificar.');
    
    // 4. Gerar comandos de teste
    console.log('\nüß™ COMANDOS PARA TESTAR AP√ìS CORRE√á√ïES:');
    console.log('node easypanel-fix-script.js');
    console.log('curl -I https://cortefacil.app/api/health');
    console.log('curl https://cortefacil.app/api/health');
}

// Executar script
if (require.main === module) {
    fixEasyPanel().catch(console.error);
}

module.exports = { fixEasyPanel, testBackend };